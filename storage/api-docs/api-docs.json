{
    "openapi": "3.0.0",
    "info": {
        "title": "Mandaean Flutter App API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "User login",
                "description": "Summary of login",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email or mobile number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password (required if email is used)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User logged in successfully"
                    },
                    "422": {
                        "description": "Validation errors or invalid credentials"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/signup": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register a new user",
                "operationId": "1c04f508009ae46ed2c1f0b3d3ea00c2",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "User's country code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mobile_no",
                        "in": "query",
                        "description": "User's mobile number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/forgot": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Forgot password",
                "description": "Summary of forgot",
                "operationId": "7e16a539a7b9ddc2962d0fc985bf8256",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reset link sent to email"
                    },
                    "422": {
                        "description": "Validation errors or user not found"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/resend-otp": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Resend OTP",
                "description": "Summary of resendOTP",
                "operationId": "2e67f946c56f11bf67751e3f43b69972",
                "parameters": [
                    {
                        "name": "mobile_no",
                        "in": "query",
                        "description": "User's mobile number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OTP sent successfully"
                    },
                    "422": {
                        "description": "Validation errors or user not found"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Verify OTP",
                "description": "Summary of verifyOTP",
                "operationId": "5cd1d4455328e029c8aeaf9aa917ad49",
                "parameters": [
                    {
                        "name": "mobile_no",
                        "in": "query",
                        "description": "User's mobile number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "One Time Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OTP verified successfully"
                    },
                    "422": {
                        "description": "OTP expired or wrong OTP entered"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/update-password": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user password",
                "description": "Summary of updatePassword",
                "operationId": "ec057bf4678645cfc212af8c81485436",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "User ID (base64 encoded)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "New password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confirm_password",
                        "in": "query",
                        "description": "Confirm new password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/add-to-cart": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "operationId": "914f332576261ec7b4b83fa267e75b61",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "color",
                                    "size"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "red"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "M"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or not enough quantity."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get current user's cart",
                "operationId": "6ee4ac25bb03117b747b23869001a511",
                "responses": {
                    "201": {
                        "description": "Cart Data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cart Empty."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-item": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update item quantity in cart",
                "operationId": "c9bbce47683b2e5d1b9f21cd2d6ddda2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "item_id",
                                    "type"
                                ],
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type": {
                                        "description": "add or remove",
                                        "type": "string",
                                        "example": "add"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or not enough quantity."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-item": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete item(s) from cart",
                "operationId": "172a047478a8dafea3ac1fa041c0c408",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "item_id"
                                ],
                                "properties": {
                                    "item_id": {
                                        "description": "JSON array of item IDs as string",
                                        "type": "string",
                                        "example": "[1,2,3]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user-address": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add or update user address for cart",
                "operationId": "db4b04890f14a98d5117f19b142c2956",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "mobile_no",
                                    "first_address",
                                    "second_address",
                                    "state",
                                    "city",
                                    "postal_code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "mobile_no": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "first_address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "second_address": {
                                        "type": "string",
                                        "example": "Apt 4B"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "California"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Los Angeles"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "90001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/mandanism-list": {
            "get": {
                "tags": [
                    "Mandanism"
                ],
                "summary": "Get Mandanism List",
                "operationId": "mandanismList",
                "responses": {
                    "200": {
                        "description": "Mandanism List retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mandanism List."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ]
            }
        },
        "/api/mandanism-detail/{id}": {
            "get": {
                "tags": [
                    "Mandanism"
                ],
                "summary": "Get Mandanism Detail",
                "operationId": "mandanismDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Mandanism item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandanism Detail retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mandanism Detail."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mandanism item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mandanism not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/holy-book-list": {
            "get": {
                "tags": [
                    "Holy Book"
                ],
                "summary": "Get Holy Book List",
                "operationId": "holyBookList",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of Holy Book (holy or author)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "holy",
                                "author"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Holy Book List retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Holy Book List."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/last-seen/{userId}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get last seen for a user",
                "operationId": "e7cd6ea7ee123880ec93a95caf2b5257",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last seen timestamp"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/send": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send a chat message",
                "operationId": "cb796b4b9626a6b3f7b423542f6e2907",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "receiver_id": {
                                        "type": "integer"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "attachment": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/mark-delivered": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Mark messages as delivered",
                "operationId": "619a8a13937e2f203015ff26600d02e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Messages marked as delivered"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/history/{userId}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get paginated chat history with a user",
                "operationId": "7a4a58bf207ab29f756c2be658ad1c4c",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated chat history"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/delete": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Bulk delete chat messages",
                "operationId": "fac1389bb55ffe3fa6e5deebe936a1a1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Messages deleted"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/block": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Block a user from chat",
                "description": "Block a user from chatting",
                "operationId": "590a511424484bf0e43b611ec3bc99f8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "blocked_user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User blocked"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chat/unblock": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Unblock a user from chat",
                "description": "Unblock a user from chatting",
                "operationId": "9d6a41b4dae4a0e5ed3a05913eac4f65",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "blocked_user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User unblocked"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chat/all-users": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get all users except self and blocked",
                "description": "Fetch all users (except self and blocked), with is_active key and pagination",
                "operationId": "ccd5586916441390933591470ee019ca",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all users except self and blocked"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/chatted-users": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get users who have chatted with the current user",
                "description": "Fetch only users who have chatted with the current user, with is_active key and pagination",
                "operationId": "344e5a0e3e37015596bec6643606d523",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users who have chatted with the current user"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/chat/mark-read": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Mark messages as read",
                "operationId": "f812315ab950086200872b15cf5a4db3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Messages marked as read"
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/friends": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get all friend suggestions for the authenticated user",
                "operationId": "e973365285d0872598256a7d417c5047",
                "responses": {
                    "200": {
                        "description": "List of sent and received friend suggestions."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Send a friend suggestion",
                "operationId": "baaf7ddb1837a40545487039703416bb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "suggested_friend_id"
                                ],
                                "properties": {
                                    "suggested_friend_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Friend suggestion sent."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/friends/{friendSuggestion}": {
            "put": {
                "tags": [
                    "Community"
                ],
                "summary": "Update the status of a friend suggestion",
                "operationId": "d7ff791aea669b977e5154a60ef71596",
                "parameters": [
                    {
                        "name": "friendSuggestion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "accepted",
                                            "rejected",
                                            "suggested"
                                        ],
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend suggestion updated."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Community"
                ],
                "summary": "Delete a friend suggestion or relationship",
                "operationId": "709bb1ee891d193274275153c4c92499",
                "parameters": [
                    {
                        "name": "friendSuggestion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend suggestion deleted."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/melvashe": {
            "get": {
                "tags": [
                    "Melvashe"
                ],
                "summary": "Get all Melvashe records",
                "operationId": "f9fd509dc4cc0670977738f7a24b4770",
                "responses": {
                    "200": {
                        "description": "List of Melvashe records."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Melvashe"
                ],
                "summary": "Create a new Melvashe record",
                "operationId": "80af3420842bb46c60780112bbd275e0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mother_name",
                                    "birth_month",
                                    "gender",
                                    "time_type",
                                    "from",
                                    "talea",
                                    "first_melvashe_name"
                                ],
                                "properties": {
                                    "mother_name": {
                                        "type": "string",
                                        "example": "Mother Name"
                                    },
                                    "birth_month": {
                                        "type": "string",
                                        "example": "January"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "time_type": {
                                        "type": "string",
                                        "example": "Morning"
                                    },
                                    "from": {
                                        "type": "string",
                                        "example": "2025-01-01"
                                    },
                                    "to": {
                                        "type": "string",
                                        "example": "2025-12-31"
                                    },
                                    "talea": {
                                        "type": "string",
                                        "example": "Some Talea"
                                    },
                                    "first_melvashe_name": {
                                        "type": "string",
                                        "example": "First Name"
                                    },
                                    "second_melvashe_name": {
                                        "type": "string",
                                        "example": "Second Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Melvashe created."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/melvashe/{id}": {
            "get": {
                "tags": [
                    "Melvashe"
                ],
                "summary": "Get a single Melvashe record",
                "operationId": "e7cd2489fbabccc7936273dc736640ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Melvashe record."
                    },
                    "404": {
                        "description": "Not found."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Melvashe"
                ],
                "summary": "Update a Melvashe record",
                "operationId": "75fc7b821a125618a86980c0e0d0cd5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mother_name",
                                    "birth_month",
                                    "gender",
                                    "time_type",
                                    "from",
                                    "talea",
                                    "first_melvashe_name"
                                ],
                                "properties": {
                                    "mother_name": {
                                        "type": "string",
                                        "example": "Mother Name"
                                    },
                                    "birth_month": {
                                        "type": "string",
                                        "example": "January"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "time_type": {
                                        "type": "string",
                                        "example": "Morning"
                                    },
                                    "from": {
                                        "type": "string",
                                        "example": "2025-01-01"
                                    },
                                    "to": {
                                        "type": "string",
                                        "example": "2025-12-31"
                                    },
                                    "talea": {
                                        "type": "string",
                                        "example": "Some Talea"
                                    },
                                    "first_melvashe_name": {
                                        "type": "string",
                                        "example": "First Name"
                                    },
                                    "second_melvashe_name": {
                                        "type": "string",
                                        "example": "Second Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Melvashe updated."
                    },
                    "404": {
                        "description": "Not found."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Melvashe"
                ],
                "summary": "Delete a Melvashe record",
                "operationId": "d529295c16df5c36561f5c8469865837",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Melvashe deleted."
                    },
                    "404": {
                        "description": "Not found."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order-history": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Order History",
                "description": "Retrieve the authenticated user's order history.",
                "operationId": "391ad250e439f2f5540fe7c197942fc2",
                "responses": {
                    "201": {
                        "description": "Order history fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order Data."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No orders found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Orders."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order-detail/{orderid}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Order Detail",
                "description": "Retrieve the details of a specific order by order ID.",
                "operationId": "d5b1586044061991cde68261b8810f16",
                "parameters": [
                    {
                        "name": "orderid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order detail fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order Data."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No orders found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Orders."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create-order": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create Order",
                "description": "Create a new order from the user's cart. Payment is handled by the app developer.",
                "operationId": "b2eb502da5bb925b5957a50358618170",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address_id": {
                                        "description": "User's address ID for delivery",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or cart empty.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart is empty."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get all posts",
                "operationId": "3fda362e2e082b5357ac416e7767e435",
                "responses": {
                    "200": {
                        "description": "List of posts with user, likes, comments, shares."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Create a new post",
                "operationId": "dcb66200c3132996151884ac232cf439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "My story..."
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{post}": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get a single post with details",
                "operationId": "5042caf9a6c47bde39921c8f400e28b5",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Community"
                ],
                "summary": "Update a post",
                "operationId": "fc17b67462ad71a7f4b287520462fd02",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated story..."
                                    },
                                    "image": {
                                        "description": "Image file to upload (optional)",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Community"
                ],
                "summary": "Delete a post",
                "operationId": "f0dcb391948b9589ee732a26a68e17c7",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{post}/like": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Like or unlike a post",
                "operationId": "480c2fcc9b06d93a9061fab6af539b4d",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like toggled."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{post}/comment": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Add a comment to a post",
                "operationId": "e77cd6b573611a1fdded552c317b27e8",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Nice post!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment added."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{post}/share": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Share a post",
                "operationId": "31ce760abd8957275c8b5bc6b5ea13f7",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post shared."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/my-posts": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get posts of the authenticated user",
                "operationId": "b1b8c2c6c33c80f172a3c5694b386acd",
                "responses": {
                    "200": {
                        "description": "List of user's own posts."
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product-list": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Product List",
                "description": "Get a list of products with optional search and filter",
                "operationId": "ceec9f9def393e58fd107c6419cf44c1",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for product name or price",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter products by price (1: low to high, 2: high to low)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product List."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/product-detail/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Product Detail",
                "description": "Get Product Detail",
                "operationId": "productDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product Detail."
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Product Name"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 99.99
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Product description here."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/search": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search Products and Mandanism Categories",
                "description": "Search for products and mandanism categories based on the search term.",
                "operationId": "2ef2bb0d968e8abcf6bc4ac2e4ba7bee",
                "responses": {
                    "201": {
                        "description": "Search results fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data fetched."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "recent_search": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No search found or validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No search found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/static-content": {
            "get": {
                "tags": [
                    "Static Content"
                ],
                "summary": "Get Static Content",
                "description": "Display a listing of the static content.",
                "operationId": "46dac05c5e4f7c630782fff8ee368f74",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "description": "Retrieve the authenticated user's profile data.",
                "operationId": "c7a47ec380aeb7f0f4f2849493b1ee6e",
                "responses": {
                    "201": {
                        "description": "User profile data retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Profile",
                "description": "Update the authenticated user's profile data.",
                "operationId": "d672549d9d302c6134599dc8dbfc47ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "country_code",
                                    "mobile_no"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@doe.com"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "example": "91"
                                    },
                                    "mobile_no": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "profile": {
                                        "description": "Profile image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User profile data updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile data updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/change-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change User Password",
                "description": "Change the authenticated user's password.",
                "operationId": "92df86f74d61ed213b9a4836e61d459c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password changed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Old password does not match."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-account": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User Account",
                "description": "Delete the authenticated user's account.",
                "operationId": "4dcf109f5af0c1138334513fef48777d",
                "responses": {
                    "201": {
                        "description": "Account deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account Deleted."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            },
            "apiKey": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "User"
        },
        {
            "name": "User Management",
            "description": "User Management"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Mandanism",
            "description": "Mandanism"
        },
        {
            "name": "Holy Book",
            "description": "Holy Book"
        },
        {
            "name": "Chat",
            "description": "Chat"
        },
        {
            "name": "Community",
            "description": "Community"
        },
        {
            "name": "Melvashe",
            "description": "Melvashe"
        },
        {
            "name": "Order",
            "description": "Order"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Search",
            "description": "Search"
        },
        {
            "name": "Static Content",
            "description": "Static Content"
        }
    ]
}